Microsoft (R) Macro Assembler Version 14.16.27026.1	    03/27/19 16:01:47
Cups Game    (cupsGame.asm				     Page 1 - 1


				TITLE Cups Game    (cupsGame.asm)

				; Author: Nathaniel Mohr
				; Course / Project ID   CS 271              Date: 1/15/19
				; Description: This program will simulate the cup game in which a ball is inserted into one cup out of three
				;				the cups are then moved around and the correct cup must be determined

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 = 00000005			BUFFER_SIZE = 5

 00000000			.data

 00000000 20 20 20 5F 5F	welcome			BYTE "   ______  _____  _____  _______      ______       _       ____    ____  ________ ", 10,13 
	   5F 5F 5F 5F 20
	   20 5F 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 20
	   20 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   20 5F 20 20 20
	   20 20 20 20 5F
	   5F 5F 5F 20 20
	   20 20 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 5F 5F 5F
	   5F 20 0A 0D
 00000054  20 2E 27 20 5F					BYTE " .' ___  ||_   _||_   _||_   __ \   .' ___  |     / \     |_   \  /   _||_   __  |", 10,13 
	   5F 5F 20 20 7C
	   7C 5F 20 20 20
	   5F 7C 7C 5F 20
	   20 20 5F 7C 7C
	   5F 20 20 20 5F
	   5F 20 5C 20 20
	   20 2E 27 20 5F
	   5F 5F 20 20 7C
	   20 20 20 20 20
	   2F 20 5C 20 20
	   20 20 20 7C 5F
	   20 20 20 5C 20
	   20 2F 20 20 20
	   5F 7C 7C 5F 20
	   20 20 5F 5F 20
	   20 7C 0A 0D
 000000A8  2F 20 2E 27 20					BYTE "/ .'   \_|  | |    | |    | |__) | / .'   \_|    / _ \      |   \/   |    | |_ \_|", 10,13 
	   20 20 5C 5F 7C
	   20 20 7C 20 7C
	   20 20 20 20 7C
	   20 7C 20 20 20
	   20 7C 20 7C 5F
	   5F 29 20 7C 20
	   2F 20 2E 27 20
	   20 20 5C 5F 7C
	   20 20 20 20 2F
	   20 5F 20 5C 20
	   20 20 20 20 20
	   7C 20 20 20 5C
	   2F 20 20 20 7C
	   20 20 20 20 7C
	   20 7C 5F 20 5C
	   5F 7C 0A 0D
 000000FC  7C 20 7C 20 20					BYTE "| |         | '    ' |    |  ___/  | |   ____   / ___ \     | |\  /| |    |  _| _ ", 10,13 
	   20 20 20 20 20
	   20 20 7C 20 27
	   20 20 20 20 27
	   20 7C 20 20 20
	   20 7C 20 20 5F
	   5F 5F 2F 20 20
	   7C 20 7C 20 20
	   20 5F 5F 5F 5F
	   20 20 20 2F 20
	   5F 5F 5F 20 5C
	   20 20 20 20 20
	   7C 20 7C 5C 20
	   20 2F 7C 20 7C
	   20 20 20 20 7C
	   20 20 5F 7C 20
	   5F 20 0A 0D
 00000150  5C 20 60 2E 5F					BYTE "\ `.___.'\   \ \__/ /    _| |_     \ `.___]  |_/ /   \ \_  _| |_\/_| |_  _| |__/ |", 10,13 
	   5F 5F 2E 27 5C
	   20 20 20 5C 20
	   5C 5F 5F 2F 20
	   2F 20 20 20 20
	   5F 7C 20 7C 5F
	   20 20 20 20 20
	   5C 20 60 2E 5F
	   5F 5F 5D 20 20
	   7C 5F 2F 20 2F
	   20 20 20 5C 20
	   5C 5F 20 20 5F
	   7C 20 7C 5F 5C
	   2F 5F 7C 20 7C
	   5F 20 20 5F 7C
	   20 7C 5F 5F 2F
	   20 7C 0A 0D
 000001A4  20 60 2E 5F 5F					BYTE " `.____ .'    `.__.'    |_____|     `._____.'|____| |____||_____||_____||________|", 10,13,0
	   5F 5F 20 2E 27
	   20 20 20 20 60
	   2E 5F 5F 2E 27
	   20 20 20 20 7C
	   5F 5F 5F 5F 5F
	   7C 20 20 20 20
	   20 60 2E 5F 5F
	   5F 5F 5F 2E 27
	   7C 5F 5F 5F 5F
	   7C 20 7C 5F 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 5F 7C
	   7C 5F 5F 5F 5F
	   5F 7C 7C 5F 5F
	   5F 5F 5F 5F 5F
	   5F 7C 0A 0D 00

 000001F9 20 20 5F 5F 5F	swapping_time	BYTE "  ______  ____      ____  _       _______  _______  _____  ____  _____   ______  ", 10,13  
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   5F 5F 5F 5F 20
	   20 5F 20 20 20
	   20 20 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 5F 5F 5F
	   5F 5F 20 20 5F
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 5F
	   20 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 0A 0D
 0000024C  2E 27 20 5F 5F					BYTE ".' ____ \|_  _|    |_  _|/ \     |_   __ \|_   __ \|_   _||_   \|_   _|.' ___  | ", 10,13  
	   5F 5F 20 5C 7C
	   5F 20 20 5F 7C
	   20 20 20 20 7C
	   5F 20 20 5F 7C
	   2F 20 5C 20 20
	   20 20 20 7C 5F
	   20 20 20 5F 5F
	   20 5C 7C 5F 20
	   20 20 5F 5F 20
	   5C 7C 5F 20 20
	   20 5F 7C 7C 5F
	   20 20 20 5C 7C
	   5F 20 20 20 5F
	   7C 2E 27 20 5F
	   5F 5F 20 20 7C
	   20 0A 0D
 0000029F  7C 20 28 5F 5F					BYTE "| (___ \_| \ \  /\  / / / _ \      | |__) | | |__) | | |    |   \ | | / .'   \_| ", 10,13  
	   5F 20 5C 5F 7C
	   20 5C 20 5C 20
	   20 2F 5C 20 20
	   2F 20 2F 20 2F
	   20 5F 20 5C 20
	   20 20 20 20 20
	   7C 20 7C 5F 5F
	   29 20 7C 20 7C
	   20 7C 5F 5F 29
	   20 7C 20 7C 20
	   7C 20 20 20 20
	   7C 20 20 20 5C
	   20 7C 20 7C 20
	   2F 20 2E 27 20
	   20 20 5C 5F 7C
	   20 0A 0D
 000002F2  20 5F 2E 5F 5F					BYTE " _.____`.   \ \/  \/ / / ___ \     |  ___/  |  ___/  | |    | |\ \| | | |   ____ ", 10,13  
	   5F 5F 60 2E 20
	   20 20 5C 20 5C
	   2F 20 20 5C 2F
	   20 2F 20 2F 20
	   5F 5F 5F 20 5C
	   20 20 20 20 20
	   7C 20 20 5F 5F
	   5F 2F 20 20 7C
	   20 20 5F 5F 5F
	   2F 20 20 7C 20
	   7C 20 20 20 20
	   7C 20 7C 5C 20
	   5C 7C 20 7C 20
	   7C 20 7C 20 20
	   20 5F 5F 5F 5F
	   20 0A 0D
 00000345  7C 20 5C 5F 5F					BYTE "| \____) |   \  /\  /_/ /   \ \_  _| |_    _| |_    _| |_  _| |_\   |_\ `.___]  |", 10,13  
	   5F 5F 29 20 7C
	   20 20 20 5C 20
	   20 2F 5C 20 20
	   2F 5F 2F 20 2F
	   20 20 20 5C 20
	   5C 5F 20 20 5F
	   7C 20 7C 5F 20
	   20 20 20 5F 7C
	   20 7C 5F 20 20
	   20 20 5F 7C 20
	   7C 5F 20 20 5F
	   7C 20 7C 5F 5C
	   20 20 20 7C 5F
	   5C 20 60 2E 5F
	   5F 5F 5D 20 20
	   7C 0A 0D
 00000398  20 5C 5F 5F 5F					BYTE " \______.'    \/  \/|____| |____||_____|  |_____|  |_____||_____|\____|`._____.' ", 10,13,0 
	   5F 5F 5F 2E 27
	   20 20 20 20 5C
	   2F 20 20 5C 2F
	   7C 5F 5F 5F 5F
	   7C 20 7C 5F 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 5F 7C
	   20 20 7C 5F 5F
	   5F 5F 5F 7C 20
	   20 7C 5F 5F 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 5F 7C
	   5C 5F 5F 5F 5F
	   7C 60 2E 5F 5F
	   5F 5F 5F 2E 27
	   20 0A 0D 00

 000003EC 20 5F 5F 5F 5F	setting_up		BYTE " _______  _____          _        ______  _____  ____  _____   ______  ", 10,13
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 5F 5F 5F
	   20 20 5F 5F 5F
	   5F 5F 20 20 5F
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 5F
	   20 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 0A 0D
 00000435  7C 5F 20 20 20					BYTE "|_   __ \|_   _|        / \     .' ___  ||_   _||_   \|_   _|.' ___  | ", 10,13            
	   5F 5F 20 5C 7C
	   5F 20 20 20 5F
	   7C 20 20 20 20
	   20 20 20 20 2F
	   20 5C 20 20 20
	   20 20 2E 27 20
	   5F 5F 5F 20 20
	   7C 7C 5F 20 20
	   20 5F 7C 7C 5F
	   20 20 20 5C 7C
	   5F 20 20 20 5F
	   7C 2E 27 20 5F
	   5F 5F 20 20 7C
	   20 0A 0D
 0000047E  20 20 7C 20 7C					BYTE "  | |__) | | |         / _ \   / .'   \_|  | |    |   \ | | / .'   \_| ", 10,13            
	   5F 5F 29 20 7C
	   20 7C 20 7C 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   5F 20 5C 20 20
	   20 2F 20 2E 27
	   20 20 20 5C 5F
	   7C 20 20 7C 20
	   7C 20 20 20 20
	   7C 20 20 20 5C
	   20 7C 20 7C 20
	   2F 20 2E 27 20
	   20 20 5C 5F 7C
	   20 0A 0D
 000004C7  20 20 7C 20 20					BYTE "  |  ___/  | |   _    / ___ \  | |         | |    | |\ \| | | |   ____ ", 10,13            
	   5F 5F 5F 2F 20
	   20 7C 20 7C 20
	   20 20 5F 20 20
	   20 20 2F 20 5F
	   5F 5F 20 5C 20
	   20 7C 20 7C 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   7C 20 20 20 20
	   7C 20 7C 5C 20
	   5C 7C 20 7C 20
	   7C 20 7C 20 20
	   20 5F 5F 5F 5F
	   20 0A 0D
 00000510  20 5F 7C 20 7C					BYTE " _| |_    _| |__/ | _/ /   \ \_\ `.___.'\ _| |_  _| |_\   |_\ `.___]  |", 10,13            
	   5F 20 20 20 20
	   5F 7C 20 7C 5F
	   5F 2F 20 7C 20
	   5F 2F 20 2F 20
	   20 20 5C 20 5C
	   5F 5C 20 60 2E
	   5F 5F 5F 2E 27
	   5C 20 5F 7C 20
	   7C 5F 20 20 5F
	   7C 20 7C 5F 5C
	   20 20 20 7C 5F
	   5C 20 60 2E 5F
	   5F 5F 5D 20 20
	   7C 0A 0D
 00000559  7C 5F 5F 5F 5F					BYTE "|_____|  |________||____| |____|`.____ .'|_____||_____|\____|`._____.' ", 10,13,0 
	   5F 7C 20 20 7C
	   5F 5F 5F 5F 5F
	   5F 5F 5F 7C 7C
	   5F 5F 5F 5F 7C
	   20 7C 5F 5F 5F
	   5F 7C 60 2E 5F
	   5F 5F 5F 20 2E
	   27 7C 5F 5F 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 5F 7C
	   5C 5F 5F 5F 5F
	   7C 60 2E 5F 5F
	   5F 5F 5F 2E 27
	   20 0A 0D 00

 000005A3 41 72 65 20 79	ready			BYTE "Are you ready?",10,13,0
	   6F 75 20 72 65
	   61 64 79 3F 0A
	   0D 00
 000005B4 20 20 20 20 20	rest_position	BYTE "      ___            ___            ___    ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 000005E1  20 20 20 20 20					BYTE "     /   \          /   \          /   \   ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 0000060E  20 20 20 20 2F					BYTE "    /     \        /     \        /     \  ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 0000063B  20 20 20 2F 20					BYTE "   /       \      /       \      /       \ ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000668  20 20 5B 5F 5F					BYTE "  [_________]    [_________]    [_________]", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 00000696 20 20 20 20 20	ball_one1		BYTE "      ___                                  ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 000006C3  20 20 20 20 20					BYTE "     /   \                                 ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 000006F0  20 20 20 20 2F					BYTE "    /     \                                ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 0000071D  20 20 20 2F 20					BYTE "   /       \         ___            ___    ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 0000074A  20 20 5B 5F 5F					BYTE "  [_________]       /   \          /   \   ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000777  20 20 20 20 20					BYTE "                   /     \        /     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 000007A4  20 20 20 20 20					BYTE "                  /       \      /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 000007D1  20 20 20 20 20					BYTE "       O         [_________]    [_________]", 10,13,0
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 000007FF 20 20 20 20 20	ball_one2		BYTE "      ___                                  ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 0000082C  20 20 20 20 20					BYTE "     /   \                                 ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000859  20 20 20 20 2F					BYTE "    /     \          ___            ___    ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000886  20 20 20 2F 20					BYTE "   /       \        /   \          /   \   ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 000008B3  20 20 5B 5F 5F					BYTE "  [_________]      /     \        /     \  ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 000008E0  20 20 20 20 20					BYTE "                  /       \      /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 0000090D  20 20 20 20 20					BYTE "       O         [_________]    [_________]", 10,13,0
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 0000093B 20 20 20 20 20	ball_one3		BYTE "      ___                                  ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000968  20 20 20 20 20					BYTE "     /   \           ___            ___    ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000995  20 20 20 20 2F					BYTE "    /     \         /   \          /   \   ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 000009C2  20 20 20 2F 20					BYTE "   /       \       /     \        /     \  ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 000009EF  20 20 5B 5F 5F					BYTE "  [_________]     /       \      /       \ ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000A1C  20 20 20 20 20					BYTE "       O         [_________]    [_________]", 10,13,0
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 00000A4A 20 20 20 20 20	ball_two1		BYTE "                     ___                   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000A77  20 20 20 20 20					BYTE "                    /   \                  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000AA4  20 20 20 20 20					BYTE "                   /     \                 ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000AD1  20 20 20 20 20					BYTE "      ___         /       \         ___    ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000AFE  20 20 20 20 20					BYTE "     /   \       [_________]       /   \   ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000B2B  20 20 20 20 2F					BYTE "    /     \                       /     \  ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00000B58  20 20 20 2F 20					BYTE "   /       \                     /       \ ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000B85  20 20 5B 5F 5F					BYTE "  [_________]         O         [_________]", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 00000BB3 20 20 20 20 20	ball_two2		BYTE "                     ___                   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000BE0  20 20 20 20 20					BYTE "                    /   \                  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000C0D  20 20 20 20 20					BYTE "      ___          /     \          ___    ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000C3A  20 20 20 20 20					BYTE "     /   \        /       \        /   \   ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000C67  20 20 20 20 2F					BYTE "    /     \      [_________]      /     \  ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00000C94  20 20 20 2F 20					BYTE "   /       \                     /       \ ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000CC1  20 20 5B 5F 5F					BYTE "  [_________]         O         [_________]", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 00000CEF 20 20 20 20 20	ball_two3		BYTE "                     ___                   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000D1C  20 20 20 20 20					BYTE "      ___           /   \           ___    ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000D49  20 20 20 20 20					BYTE "     /   \         /     \         /   \   ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000D76  20 20 20 20 2F					BYTE "    /     \       /       \       /     \  ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00000DA3  20 20 20 2F 20					BYTE "   /       \     [_________]     /       \ ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000DD0  20 20 5B 5F 5F					BYTE "  [_________]         O         [_________]", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
	   00

 00000DFE 20 20 20 20 20	ball_three1		BYTE "                                    ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000E2B  20 20 20 20 20					BYTE "                                   /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000E58  20 20 20 20 20					BYTE "                                  /     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00000E85  20 20 20 20 20					BYTE "      ___            ___         /       \ ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00000EB2  20 20 20 20 20					BYTE "     /   \          /   \       [_________]", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00000EDF  20 20 20 20 2F					BYTE "    /     \        /     \                 ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000F0C  20 20 20 2F 20					BYTE "   /       \      /       \                ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00000F39  20 20 5B 5F 5F					BYTE "  [_________]    [_________]         O     ", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 0A 0D
	   00

 00000F67 20 20 20 20 20	ball_three2		BYTE "                                    ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00000F94  20 20 20 20 20					BYTE "                                   /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00000FC1  20 20 20 20 20					BYTE "      ___            ___          /     \  ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00000FEE  20 20 20 20 20					BYTE "     /   \          /   \        /       \ ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 0000101B  20 20 20 20 2F					BYTE "    /     \        /     \      [_________]", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00001048  20 20 20 2F 20					BYTE "   /       \      /       \                ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001075  20 20 5B 5F 5F					BYTE "  [_________]    [_________]         O     ", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 0A 0D
	   00
				                                    
 000010A3 20 20 20 20 20	ball_three3		BYTE "                                    ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 000010D0  20 20 20 20 20					BYTE "      ___            ___           /   \   ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 000010FD  20 20 20 20 20					BYTE "     /   \          /   \         /     \  ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 0000112A  20 20 20 20 2F					BYTE "    /     \        /     \       /       \ ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00001157  20 20 20 2F 20					BYTE "   /       \      /       \     [_________]", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00001184  20 20 5B 5F 5F					BYTE "  [_________]    [_________]         O     ", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 4F 20 20
	   20 20 20 0A 0D
	   00

 000011B2 20 20 20 20 20	one_and_three1	BYTE "        ___                              ", 10,13
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 000011DD  20 20 20 20 20					BYTE "       /   \                             ", 10,13
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001208  20 20 20 20 20					BYTE "      /     \        ___                 ", 10,13
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001233  20 20 20 20 20					BYTE "     /       \      /   \                ", 10,13
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 0000125E  20 20 20 20 5B					BYTE "    [_________]    /     \        ___    ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 0A 0D
 00001289  20 20 20 20 20					BYTE "                  /       \      /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 0A 0D
 000012B4  20 20 20 20 20					BYTE "                 [_________]    /     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 0A 0D
 000012DF  20 20 20 20 20					BYTE "                               /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 0A 0D
 0000130A  20 20 20 20 20					BYTE "                              [_________]", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 0A 0D 00

 00001336 20 20 20 20 20	one_and_three2	BYTE "                 ___            ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 0A 0D
 00001358  20 20 20 20 20					BYTE "                /   \           ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 0A 0D
 0000137A  20 20 20 20 20					BYTE "               /     \__        ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 5C 5F 5F 20
	   20 20 20 20 20
	   20 20 0A 0D
 0000139C  20 20 20 20 20					BYTE "              /     /   \       ", 10,13
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 0A 0D
 000013BE  20 20 20 20 20					BYTE "             [_____/     \__    ", 10,13
	   20 20 20 20 20
	   20 20 20 5B 5F
	   5F 5F 5F 5F 2F
	   20 20 20 20 20
	   5C 5F 5F 20 20
	   20 20 0A 0D
 000013E0  20 20 20 20 20					BYTE "                  /     /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 2F
	   20 20 20 5C 20
	   20 20 0A 0D
 00001402  20 20 20 20 20					BYTE "                 [_____/     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 2F 20
	   20 20 20 20 5C
	   20 20 0A 0D
 00001424  20 20 20 20 20					BYTE "                      /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 20 20
	   5C 20 0A 0D
 00001446  20 20 20 20 20					BYTE "                     [_________]", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5B 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5D 0A 0D 00

 00001469 20 20 20 20 20	one_and_three3  BYTE "                          ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 0000148C  20 20 20 20 20					BYTE "                         /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 000014AF  20 20 20 20 20					BYTE "                     ___/     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 000014D2  20 20 20 20 20					BYTE "                    /   \      \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 5C 20 0A 0D
 000014F5  20 20 20 20 20					BYTE "                ___/     \______]", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 2F
	   20 20 20 20 20
	   5C 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00001518  20 20 20 20 20					BYTE "               /   \      \      ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 0A 0D
 0000153B  20 20 20 20 20					BYTE "              /     \______]     ", 10,13
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 0A 0D
 0000155E  20 20 20 20 20					BYTE "             /       \           ", 10,13
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001581  20 20 20 20 20					BYTE "            [_________]          ", 10,13,0
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
	   00

 000015A5 20 20 20 20 20	one_and_three4  BYTE "                                  ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 0A 0D
 000015D0  20 20 20 20 20					BYTE "                                 /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 0A 0D
 000015FB  20 20 20 20 20					BYTE "                     ___        /     \  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 0A 0D
 00001626  20 20 20 20 20					BYTE "                    /   \      /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 0A 0D
 00001651  20 20 20 20 20					BYTE "        ___        /     \    [_________]", 10,13
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 0A 0D
 0000167C  20 20 20 20 20					BYTE "       /   \      /       \              ", 10,13
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 000016A7  20 20 20 20 20					BYTE "      /     \    [_________]             ", 10,13
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 000016D2  20 20 20 20 20					BYTE "     /       \                           ", 10,13
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 000016FD  20 20 20 20 5B					BYTE "    [_________]                          ", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D 00

 00001729 20 20 20 20 20	one_and_two1	BYTE "        ___                                ", 10,13
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001756  20 20 20 20 20					BYTE "       /   \                               ", 10,13
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001783  20 20 20 20 20					BYTE "      /     \                       ___    ", 10,13
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 000017B0  20 20 20 20 20					BYTE "     /       \                     /   \   ", 10,13
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 000017DD  20 20 20 20 5B					BYTE "    [_________]    ___            /     \  ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 0000180A  20 20 20 20 20					BYTE "                  /   \          /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00001837  20 20 20 20 20					BYTE "                 /     \        [_________]", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00001864  20 20 20 20 20					BYTE "                /       \                  ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001891  20 20 20 20 20					BYTE "               [_________]                 ", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
	   00

 000018BF 20 20 20 20 20	one_and_two2	BYTE "             ___                           ", 10,13
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 000018EC  20 20 20 20 20					BYTE "            /   \                          ", 10,13
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001919  20 20 20 20 20					BYTE "           /     \                  ___    ", 10,13
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00001946  20 20 20 20 20					BYTE "          /       \                /   \   ", 10,13
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00001973  20 20 20 20 20					BYTE "         [_________]              /     \  ", 10,13
	   20 20 20 20 5B
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 000019A0  20 20 20 20 20					BYTE "             /   \               /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 000019CD  20 20 20 20 20					BYTE "            /     \             [_________]", 10,13
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 000019FA  20 20 20 20 20					BYTE "           /       \                       ", 10,13
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001A27  20 20 20 20 20					BYTE "          [_________]                      ", 10,13,0
	   20 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
	   00

 00001A55 20 20 20 20 20	one_and_two3	BYTE "                   ___                     ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001A82  20 20 20 20 20					BYTE "                  /   \                    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001AAF  20 20 20 20 20					BYTE "                 /     \            ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 0A 0D
 00001ADC  20 20 20 20 20					BYTE "                /       \          /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 0A 0D
 00001B09  20 20 20 20 20					BYTE "        ___    [_________]        /     \  ", 10,13
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 20 20 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   5C 20 20 0A 0D
 00001B36  20 20 20 20 20					BYTE "       /   \                     /       \ ", 10,13
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 5C 20 0A 0D
 00001B63  20 20 20 20 20					BYTE "      /     \                   [_________]", 10,13
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5B 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5D 0A 0D
 00001B90  20 20 20 20 20					BYTE "     /       \                             ", 10,13
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
 00001BBD  20 20 20 20 5B					BYTE "    [_________]                            ", 10,13,0
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0A 0D
	   00

 00001BEB 20 20 20 20 20	two_and_three1	BYTE "                       ___               ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001C16  20 20 20 20 20					BYTE "                      /   \              ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001C41  20 20 20 20 20					BYTE "      ___            /     \             ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001C6C  20 20 20 20 20					BYTE "     /   \          /       \            ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001C97  20 20 20 20 2F					BYTE "    /     \        [_________]    ___    ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 5B
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 0A 0D
 00001CC2  20 20 20 2F 20					BYTE "   /       \                     /   \   ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 0A 0D
 00001CED  20 20 5B 5F 5F					BYTE "  [_________]                   /     \  ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 0A 0D
 00001D18  20 20 20 20 20					BYTE "                               /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 0A 0D
 00001D43  20 20 20 20 20					BYTE "                              [_________]", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 0A 0D 00

 00001D6F 20 20 20 20 20	two_and_three2	BYTE "                            ___     ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   20 0A 0D
 00001D95  20 20 20 20 20					BYTE "                           /   \    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 0A 0D
 00001DBB  20 20 20 20 20					BYTE "      ___                 /     \   ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 0A 0D
 00001DE1  20 20 20 20 20					BYTE "     /   \               /       \  ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 0A 0D
 00001E07  20 20 20 20 2F					BYTE "    /     \             [_________] ", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5B
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 0A 0D
 00001E2D  20 20 20 2F 20					BYTE "   /       \                /   \   ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 0A 0D
 00001E53  20 20 5B 5F 5F					BYTE "  [_________]              /     \  ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 0A 0D
 00001E79  20 20 20 20 20					BYTE "                          /       \ ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 0A 0D
 00001E9F  20 20 20 20 20					BYTE "                         [_________]", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 0A 0D 00

 00001EC6 20 20 20 20 20	two_and_three3	BYTE "                                  ___    ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 0A 0D
 00001EF1  20 20 20 20 20					BYTE "                                 /   \   ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 0A 0D
 00001F1C  20 20 20 20 20					BYTE "      ___                       /     \  ", 10,13
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 5C 20
	   20 0A 0D
 00001F47  20 20 20 20 20					BYTE "     /   \                     /       \ ", 10,13
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 5C
	   20 0A 0D
 00001F72  20 20 20 20 2F					BYTE "    /     \            ___    [_________]", 10,13
	   20 20 20 20 20
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 20 20 20 20
	   5B 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5D 0A 0D
 00001F9D  20 20 20 2F 20					BYTE "   /       \          /   \              ", 10,13
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 5C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001FC8  20 20 5B 5F 5F					BYTE "  [_________]        /     \             ", 10,13
	   5F 5F 5F 5F 5F
	   5F 5F 5D 20 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 00001FF3  20 20 20 20 20					BYTE "                    /       \            ", 10,13
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D
 0000201E  20 20 20 20 20					BYTE "                   [_________]           ", 10,13,0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5B
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5D
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A 0D 00

 0000204A 4E 6F 77 20 69	prompt			BYTE	"Now its time for you to guess which cup the ball is in",10,13,0
	   74 73 20 74 69
	   6D 65 20 66 6F
	   72 20 79 6F 75
	   20 74 6F 20 67
	   75 65 73 73 20
	   77 68 69 63 68
	   20 63 75 70 20
	   74 68 65 20 62
	   61 6C 6C 20 69
	   73 20 69 6E 0A
	   0D 00
 00002083 50 6C 65 61 73	prompt2			BYTE	"Please enter your guess: ",0
	   65 20 65 6E 74
	   65 72 20 79 6F
	   75 72 20 67 75
	   65 73 73 3A 20
	   00
 0000209D 43 4F 4E 47 52	congratulations	BYTE	"CONGRATULATIONS! You correctly guessed where the ball was.",10,13,0
	   41 54 55 4C 41
	   54 49 4F 4E 53
	   21 20 59 6F 75
	   20 63 6F 72 72
	   65 63 74 6C 79
	   20 67 75 65 73
	   73 65 64 20 77
	   68 65 72 65 20
	   74 68 65 20 62
	   61 6C 6C 20 77
	   61 73 2E 0A 0D
	   00
 000020DA 53 4F 52 52 59	sorry			BYTE	"SORRY. You picked the wrong cup.",10,13,0
	   2E 20 59 6F 75
	   20 70 69 63 6B
	   65 64 20 74 68
	   65 20 77 72 6F
	   6E 67 20 63 75
	   70 2E 0A 0D 00
 000020FD 59 45 53 00		yes				BYTE	"YES",0
 00002101 4E 4F 00		no				BYTE	"NO",0
 00002104 57 6F 75 6C 64	play_again		BYTE	"Would you like to play again? ",0
	   20 79 6F 75 20
	   6C 69 6B 65 20
	   74 6F 20 70 6C
	   61 79 20 61 67
	   61 69 6E 3F 20
	   00

 00002123 00000000		ball_position	DWORD	?
 00002127 00000000		num_swaps		DWORD	?	; variable for how many swaps are to be performed
 0000212B 00000000		last_swap		DWORD	0	; variable for what swap was last performed

 0000212F  00000005 [		user_string		BYTE	BUFFER_SIZE DUP(0)
	    00
	   ]
 00002134 00000000		user_str_lngth	DWORD	?
 00002138 00000000		user_int		DWORD	?

 00000000			.code
 00000000			main PROC
 00000000  E8 00000000 E		call Randomize
 00000005  E8 00000036			call introduction

 0000000A				top:
 0000000A  E8 00000041			call game_setup
 0000000F  E8 000001DF			call swapping
 00000014  E8 000003F7			call get_user_guess
 00000019  E8 0000042A			call reveal_ball
 0000001E  E8 00000536			call determine_outcome
 00000023  E8 00000555			call get_user_answer
					INVOKE Str_compare, ADDR user_string, ADDR yes
 00000028  68 000020FD R   *	    push   OFFSET yes
 0000002D  68 0000212F R   *	    push   OFFSET user_string
 00000032  E8 00000000 E   *	    call   Str_compare
 00000037  74 D1			je top

					exit	
 00000039  6A 00	   *	    push   +000000000h
 0000003B  E8 00000000 E   *	    call   ExitProcess
 00000040			main ENDP

				; This procedure introduces the program
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx
 00000040			introduction PROC
 00000040  BA 00000000 R		mov edx, OFFSET welcome
 00000045  E8 00000000 E		call WriteString
 0000004A  E8 00000000 E		call WaitMsg
 0000004F  C3				ret
 00000050			introduction ENDP

				; This procedure sets up the game
				; Receives: none
				; Returns: ball_position updated
				; Pre-Conditions: none
				; Registers changed: edx, eax
 00000050			game_setup PROC
 00000050  E8 00000000 E		call ClrScr
 00000055  BA 000003EC R		mov edx, OFFSET setting_up
 0000005A  E8 00000000 E		call WriteString
 0000005F  BA 000005A3 R		mov edx, OFFSET ready
 00000064  E8 00000000 E		call WriteString
 00000069  E8 00000000 E		call WaitMsg
 0000006E  E8 00000000 E		call ClrScr

 00000073  B8 00000003			mov eax, 3	
 00000078  E8 00000000 E		call RandomRange
 0000007D  40				inc eax
 0000007E  A3 00002123 R		mov ball_position, eax

 00000083  83 F8 01			cmp eax, 1
 00000086  74 0C			je cup_one
 00000088  83 F8 02			cmp eax, 2
 0000008B  74 0E			je cup_two
 0000008D  E8 000000C0			call place_ball_three
 00000092  EB 0C			jmp end_setup

 00000094				cup_one:
 00000094  E8 0000000D			call place_ball_one
 00000099  EB 05			jmp end_setup

 0000009B				cup_two:
 0000009B  E8 0000005C			call place_ball_two

 000000A0				end_setup:
 000000A0  E8 00000103			call set_num_swaps
 000000A5  C3				ret
 000000A6			game_setup ENDP

				; This procedure prints the ball being place in cup one
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 000000A6			place_ball_one PROC
 000000A6  B8 0000012C			mov eax, 300

 000000AB  BA 00000696 R		mov edx, OFFSET ball_one1
 000000B0  E8 00000000 E		call WriteString
 000000B5  E8 00000000 E		call Delay
 000000BA  E8 00000000 E		call ClrScr

 000000BF  BA 000007FF R		mov edx, OFFSET ball_one2
 000000C4  E8 00000000 E		call WriteString
 000000C9  E8 00000000 E		call Delay
 000000CE  E8 00000000 E		call ClrScr

 000000D3  BA 0000093B R		mov edx, OFFSET ball_one3
 000000D8  E8 00000000 E		call WriteString
 000000DD  E8 00000000 E		call Delay
 000000E2  E8 00000000 E		call ClrScr

 000000E7  BA 000005B4 R		mov edx, OFFSET rest_position
 000000EC  E8 00000000 E		call WriteString
 000000F1  E8 00000000 E		call Delay
 000000F6  E8 00000000 E		call ClrScr
 000000FB  C3				ret
 000000FC			place_ball_one ENDP

				; This procedure prints the ball being placed in cup two
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 000000FC			place_ball_two PROC
 000000FC  B8 0000012C			mov eax, 300

 00000101  BA 00000A4A R		mov edx, OFFSET ball_two1
 00000106  E8 00000000 E		call WriteString
 0000010B  E8 00000000 E		call Delay
 00000110  E8 00000000 E		call ClrScr

 00000115  BA 00000BB3 R		mov edx, OFFSET ball_two2
 0000011A  E8 00000000 E		call WriteString
 0000011F  E8 00000000 E		call Delay
 00000124  E8 00000000 E		call ClrScr

 00000129  BA 00000CEF R		mov edx, OFFSET ball_two3
 0000012E  E8 00000000 E		call WriteString
 00000133  E8 00000000 E		call Delay
 00000138  E8 00000000 E		call ClrScr

 0000013D  BA 000005B4 R		mov edx, OFFSET rest_position
 00000142  E8 00000000 E		call WriteString
 00000147  E8 00000000 E		call Delay
 0000014C  E8 00000000 E		call ClrScr
 00000151  C3				ret
 00000152			place_ball_two ENDP

				; This procedure prints the vall being place in cup three
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 00000152			place_ball_three PROC
 00000152  B8 0000012C			mov eax, 300

 00000157  BA 00000DFE R		mov edx, OFFSET ball_three1
 0000015C  E8 00000000 E		call WriteString
 00000161  E8 00000000 E		call Delay
 00000166  E8 00000000 E		call ClrScr

 0000016B  BA 00000F67 R		mov edx, OFFSET ball_three2
 00000170  E8 00000000 E		call WriteString
 00000175  E8 00000000 E		call Delay
 0000017A  E8 00000000 E		call ClrScr

 0000017F  BA 000010A3 R		mov edx, OFFSET ball_three3
 00000184  E8 00000000 E		call WriteString
 00000189  E8 00000000 E		call Delay
 0000018E  E8 00000000 E		call ClrScr

 00000193  BA 000005B4 R		mov edx, OFFSET rest_position
 00000198  E8 00000000 E		call WriteString
 0000019D  E8 00000000 E		call Delay
 000001A2  E8 00000000 E		call ClrScr
 000001A7  C3				ret
 000001A8			place_ball_three ENDP

				; This procedure determines how many swaps will be done
				; Receives: none
				; Returns: num_swaps updated
				; Pre-Conditions: none
				; Registers changed: eax
 000001A8			set_num_swaps PROC
 000001A8  B8 00000008			mov eax, 8
 000001AD  E8 00000000 E		call RandomRange
 000001B2  83 C0 03			add eax, 3
 000001B5  A3 00002127 R		mov num_swaps, eax
 000001BA  C3				ret
 000001BB			set_num_swaps ENDP

				; This procedure performs one swap
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax, ebx
 000001BB			one_swap PROC
 000001BB				new_num:
 000001BB  B8 00000003			mov eax, 3
 000001C0  E8 00000000 E		call RandomRange
 000001C5  40				inc eax
 000001C6  8B 1D 0000212B R		mov ebx, last_swap	; makes sure that the same swap is not done twice in a row
 000001CC  3B C3			cmp eax, ebx
 000001CE  74 EB			je new_num

 000001D0  A3 0000212B R		mov last_swap, eax

 000001D5  83 F8 01			cmp eax, 1
 000001D8  74 0C			je if_one
 000001DA  83 F8 02			cmp eax, 2
 000001DD  74 0E			je if_two
 000001DF  E8 00000179			call swap31
 000001E4  EB 0C			jmp end_swap

 000001E6				if_one:
 000001E6  E8 00000034			call swap12
 000001EB  EB 05			jmp end_swap

 000001ED				if_two:
 000001ED  E8 000000CC			call swap23

 000001F2				end_swap:
 000001F2  C3				ret
 000001F3			one_swap ENDP

				; This procedure performs all the swaps
				; Receives: num_swaps global 
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, ecx
 000001F3			swapping PROC
 000001F3  BA 000001F9 R		mov edx, OFFSET swapping_time
 000001F8  E8 00000000 E		call WriteString
 000001FD  BA 000005A3 R		mov edx, OFFSET ready
 00000202  E8 00000000 E		call WriteString
 00000207  E8 00000000 E		call WaitMsg
 0000020C  E8 00000000 E		call ClrScr

 00000211  8B 0D 00002127 R		mov ecx, num_swaps
 00000217				top:
 00000217  E8 FFFFFF9F			call one_swap
 0000021C  E2 F9			loop top
 0000021E  C3				ret
 0000021F			swapping ENDP

				; This procedure performs a swap with cups one and two
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: none
 0000021F			swap12 PROC
 0000021F  E8 00000006			call swap12_animation
 00000224  E8 0000006B			call swap12_adjusting
 00000229  C3				ret
 0000022A			swap12 ENDP

				; This procedure prints the animation of swapping one and two
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 0000022A			swap12_animation PROC
 0000022A  B8 00000064			mov eax, 100

 0000022F  BA 000005B4 R		mov edx, OFFSET rest_position
 00000234  E8 00000000 E		call WriteString
 00000239  E8 00000000 E		call Delay
 0000023E  E8 00000000 E		call ClrScr

 00000243  BA 00001729 R		mov edx, OFFSET one_and_two1
 00000248  E8 00000000 E		call WriteString
 0000024D  E8 00000000 E		call Delay
 00000252  E8 00000000 E		call ClrScr

 00000257  BA 000018BF R		mov edx, OFFSET one_and_two2
 0000025C  E8 00000000 E		call WriteString
 00000261  E8 00000000 E		call Delay
 00000266  E8 00000000 E		call ClrScr

 0000026B  BA 00001A55 R		mov edx, OFFSET one_and_two3
 00000270  E8 00000000 E		call WriteString
 00000275  E8 00000000 E		call Delay
 0000027A  E8 00000000 E		call ClrScr

 0000027F  BA 000005B4 R		mov edx, OFFSET rest_position
 00000284  E8 00000000 E		call WriteString
 00000289  E8 00000000 E		call Delay
 0000028E  E8 00000000 E		call ClrScr
 00000293  C3				ret
 00000294			swap12_animation ENDP

				; This procedure adjusts ball_position
				; Receives: ball_position global
				; Returns: ball_position adjusted
				; Pre-Conditions: none
				; Registers changed: eax
 00000294			swap12_adjusting PROC
 00000294  A1 00002123 R		mov eax, ball_position
 00000299  83 F8 01			cmp eax, 1
 0000029C  74 07			je make_two
 0000029E  83 F8 02			cmp eax, 2
 000002A1  74 0E			je make_one
 000002A3  EB 18			jmp end_adjusting

 000002A5				make_two:
 000002A5  B8 00000002			mov eax, 2
 000002AA  A3 00002123 R		mov ball_position, eax
 000002AF  EB 0C			jmp end_adjusting

 000002B1				make_one:
 000002B1  B8 00000001			mov eax, 1
 000002B6  A3 00002123 R		mov ball_position, eax
 000002BB  EB 00			jmp end_adjusting

 000002BD				end_adjusting:
 000002BD  C3				ret
 000002BE			swap12_adjusting ENDP

				; This procedure performs a swap with cups two and three
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: none
 000002BE			swap23 PROC
 000002BE  E8 00000006			call swap23_animation
 000002C3  E8 0000006B			call swap23_adjusting
 000002C8  C3				ret
 000002C9			swap23 ENDP

				; This procedure prints the animation of swapping two and three
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 000002C9			swap23_animation PROC
 000002C9  B8 00000064			mov eax, 100

 000002CE  BA 000005B4 R		mov edx, OFFSET rest_position
 000002D3  E8 00000000 E		call WriteString
 000002D8  E8 00000000 E		call Delay
 000002DD  E8 00000000 E		call ClrScr

 000002E2  BA 00001BEB R		mov edx, OFFSET two_and_three1
 000002E7  E8 00000000 E		call WriteString
 000002EC  E8 00000000 E		call Delay
 000002F1  E8 00000000 E		call ClrScr

 000002F6  BA 00001D6F R		mov edx, OFFSET two_and_three2
 000002FB  E8 00000000 E		call WriteString
 00000300  E8 00000000 E		call Delay
 00000305  E8 00000000 E		call ClrScr

 0000030A  BA 00001EC6 R		mov edx, OFFSET two_and_three3
 0000030F  E8 00000000 E		call WriteString
 00000314  E8 00000000 E		call Delay
 00000319  E8 00000000 E		call ClrScr

 0000031E  BA 000005B4 R		mov edx, OFFSET rest_position
 00000323  E8 00000000 E		call WriteString
 00000328  E8 00000000 E		call Delay
 0000032D  E8 00000000 E		call ClrScr
 00000332  C3				ret
 00000333			swap23_animation ENDP

				; This procedure adjusts ball_position
				; Receives: ball_position global
				; Returns: ball_position adjusted
				; Pre-Conditions: none
				; Registers changed: eax
 00000333			swap23_adjusting PROC
 00000333  A1 00002123 R		mov eax, ball_position
 00000338  83 F8 02			cmp eax, 2
 0000033B  74 07			je make_three
 0000033D  83 F8 03			cmp eax, 3
 00000340  74 0E			je make_two
 00000342  EB 18			jmp end_adjusting

 00000344				make_three:
 00000344  B8 00000003			mov eax, 3
 00000349  A3 00002123 R		mov ball_position, eax
 0000034E  EB 0C			jmp end_adjusting

 00000350				make_two:
 00000350  B8 00000002			mov eax, 2
 00000355  A3 00002123 R		mov ball_position, eax
 0000035A  EB 00			jmp end_adjusting

 0000035C				end_adjusting:
 0000035C  C3				ret
 0000035D			swap23_adjusting ENDP

				; This procedure performs a swap with cups three and one
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: none
 0000035D			swap31 PROC
 0000035D  E8 00000006			call swap31_animation
 00000362  E8 0000007F			call swap31_adjusting
 00000367  C3				ret
 00000368			swap31 ENDP

				; This procedure prints the animation of swapping three and one
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: edx, eax
 00000368			swap31_animation PROC
 00000368  B8 00000064			mov eax, 100

 0000036D  BA 000005B4 R		mov edx, OFFSET rest_position
 00000372  E8 00000000 E		call WriteString
 00000377  E8 00000000 E		call Delay
 0000037C  E8 00000000 E		call ClrScr

 00000381  BA 000011B2 R		mov edx, OFFSET one_and_three1
 00000386  E8 00000000 E		call WriteString
 0000038B  E8 00000000 E		call Delay
 00000390  E8 00000000 E		call ClrScr

 00000395  BA 00001336 R		mov edx, OFFSET one_and_three2
 0000039A  E8 00000000 E		call WriteString
 0000039F  E8 00000000 E		call Delay
 000003A4  E8 00000000 E		call ClrScr

 000003A9  BA 00001469 R		mov edx, OFFSET one_and_three3
 000003AE  E8 00000000 E		call WriteString
 000003B3  E8 00000000 E		call Delay
 000003B8  E8 00000000 E		call ClrScr

 000003BD  BA 000015A5 R		mov edx, OFFSET one_and_three4
 000003C2  E8 00000000 E		call WriteString
 000003C7  E8 00000000 E		call Delay
 000003CC  E8 00000000 E		call ClrScr

 000003D1  BA 000005B4 R		mov edx, OFFSET rest_position
 000003D6  E8 00000000 E		call WriteString
 000003DB  E8 00000000 E		call Delay
 000003E0  E8 00000000 E		call ClrScr
 000003E5  C3				ret
 000003E6			swap31_animation ENDP

				; This procedure adjusts ball_position
				; Receives: ball_position global
				; Returns: ball_position adjusted
				; Pre-Conditions: none
				; Registers changed: eax
 000003E6			swap31_adjusting PROC
 000003E6  A1 00002123 R		mov eax, ball_position
 000003EB  83 F8 03			cmp eax, 3
 000003EE  74 07			je make_one
 000003F0  83 F8 01			cmp eax, 1
 000003F3  74 0E			je make_three
 000003F5  EB 18			jmp end_adjusting

 000003F7				make_one:
 000003F7  B8 00000001			mov eax, 1
 000003FC  A3 00002123 R		mov ball_position, eax
 00000401  EB 0C			jmp end_adjusting

 00000403				make_three:
 00000403  B8 00000003			mov eax, 3
 00000408  A3 00002123 R		mov ball_position, eax
 0000040D  EB 00			jmp end_adjusting

 0000040F				end_adjusting:
 0000040F  C3				ret
 00000410			swap31_adjusting ENDP

				; This procedure gets the user's guess
				; Receives: none
				; Returns: user_int adjusted
				; Pre-Conditions: none
				; Registers changed: edx, ecx, eax
 00000410			get_user_guess PROC
 00000410  BA 0000204A R		mov edx, OFFSET prompt
 00000415  E8 00000000 E		call WriteString
					
 0000041A				getting_guess:
 0000041A  BA 00002083 R		mov edx, OFFSET prompt2
 0000041F  E8 00000000 E		call WriteString
 00000424  BA 0000212F R		mov edx, OFFSET user_string
 00000429  B9 00000005			mov ecx, BUFFER_SIZE
 0000042E  E8 00000000 E		call ReadString
 00000433  E8 0000018D			call is_num
 00000438  83 F8 00			cmp eax, 0
 0000043B  74 DD			je getting_guess

 0000043D  68 00002138 R		push OFFSET user_int
 00000442  E8 000001B2			call string_to_int

 00000447  C3				ret
 00000448			get_user_guess ENDP

				; This procedure animates the ball being revealed
				; Receives: ball_position as global
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax
 00000448			reveal_ball PROC
 00000448  E8 00000000 E		call WaitMsg
 0000044D  E8 00000000 E		call ClrScr
 00000452  A1 00002123 R		mov eax, ball_position
 00000457  83 F8 01			cmp eax, 1
 0000045A  74 0C			je cup_one
 0000045C  83 F8 02			cmp eax, 2
 0000045F  74 0E			je cup_two
 00000461  E8 000000A7			call reveal_ball_three
 00000466  EB 0C			jmp bottom

 00000468				cup_one:
 00000468  E8 00000008			call reveal_ball_one
 0000046D  EB 05			jmp bottom

 0000046F				cup_two:
 0000046F  E8 0000004D			call reveal_ball_two

 00000474				bottom:
 00000474  C3				ret
 00000475			reveal_ball ENDP

				; This procedure animates the ball being revealed in cup one
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax, edx
 00000475			reveal_ball_one PROC
 00000475  B8 0000012C			mov eax, 300

 0000047A  BA 000005B4 R		mov edx, OFFSET rest_position
 0000047F  E8 00000000 E		call WriteString
 00000484  E8 00000000 E		call Delay
 00000489  E8 00000000 E		call ClrScr

 0000048E  BA 0000093B R		mov edx, OFFSET ball_one3
 00000493  E8 00000000 E		call WriteString
 00000498  E8 00000000 E		call Delay
 0000049D  E8 00000000 E		call ClrScr

 000004A2  BA 000007FF R		mov edx, OFFSET ball_one2
 000004A7  E8 00000000 E		call WriteString
 000004AC  E8 00000000 E		call Delay
 000004B1  E8 00000000 E		call ClrScr

 000004B6  BA 00000696 R		mov edx, OFFSET ball_one1
 000004BB  E8 00000000 E		call WriteString
 000004C0  C3				ret
 000004C1			reveal_ball_one ENDP

				; This procedure animates the ball being revealed in cup two
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax, edx
 000004C1			reveal_ball_two PROC
 000004C1  B8 0000012C			mov eax, 300

 000004C6  BA 000005B4 R		mov edx, OFFSET rest_position
 000004CB  E8 00000000 E		call WriteString
 000004D0  E8 00000000 E		call Delay
 000004D5  E8 00000000 E		call ClrScr

 000004DA  BA 00000CEF R		mov edx, OFFSET ball_two3
 000004DF  E8 00000000 E		call WriteString
 000004E4  E8 00000000 E		call Delay
 000004E9  E8 00000000 E		call ClrScr

 000004EE  BA 00000BB3 R		mov edx, OFFSET ball_two2
 000004F3  E8 00000000 E		call WriteString
 000004F8  E8 00000000 E		call Delay
 000004FD  E8 00000000 E		call ClrScr

 00000502  BA 00000A4A R		mov edx, OFFSET ball_two1
 00000507  E8 00000000 E		call WriteString
 0000050C  C3				ret
 0000050D			reveal_ball_two ENDP

				; This procedure animates the ball being revealed in cup three
				; Receives: none
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax, edx
 0000050D			reveal_ball_three PROC
 0000050D  B8 0000012C			mov eax, 300

 00000512  BA 000005B4 R		mov edx, OFFSET rest_position
 00000517  E8 00000000 E		call WriteString
 0000051C  E8 00000000 E		call Delay
 00000521  E8 00000000 E		call ClrScr

 00000526  BA 000010A3 R		mov edx, OFFSET ball_three3
 0000052B  E8 00000000 E		call WriteString
 00000530  E8 00000000 E		call Delay
 00000535  E8 00000000 E		call ClrScr

 0000053A  BA 00000F67 R		mov edx, OFFSET ball_three2
 0000053F  E8 00000000 E		call WriteString
 00000544  E8 00000000 E		call Delay
 00000549  E8 00000000 E		call ClrScr

 0000054E  BA 00000DFE R		mov edx, OFFSET ball_three1
 00000553  E8 00000000 E		call WriteString
 00000558  C3				ret
 00000559			reveal_ball_three ENDP

				; This procedure determines how the user did
				; Receives: user_int, ball_position as global
				; Returns: none
				; Pre-Conditions: none
				; Registers changed: eax, edx
 00000559			determine_outcome PROC
 00000559  A1 00002138 R		mov eax, user_int
 0000055E  3B 05 00002123 R		cmp eax, ball_position 
 00000564  74 0C			je winner
 00000566  BA 000020DA R		mov edx, OFFSET sorry
 0000056B  E8 00000000 E		call WriteString
 00000570  EB 0A			jmp bottom

 00000572				winner:
 00000572  BA 0000209D R		mov edx, OFFSET congratulations
 00000577  E8 00000000 E		call WriteString

 0000057C				bottom:
 0000057C  C3				ret
 0000057D			determine_outcome ENDP

				; This procedure asks the user if they would like to play again
				; Receives: none
				; Returns: user_string adjusted
				; Pre-Conditions: none
				; Registers changed: eax, edx, ecx
 0000057D			get_user_answer PROC
 0000057D				getting_answer:
 0000057D  BA 00002104 R		mov edx, OFFSET play_again
 00000582  E8 00000000 E		call WriteString
 00000587  BA 0000212F R		mov edx, OFFSET user_string
 0000058C  B9 00000005			mov ecx, BUFFER_SIZE
 00000591  E8 00000000 E		call ReadString
					INVOKE Str_ucase, ADDR user_string
 00000596  68 0000212F R   *	    push   OFFSET user_string
 0000059B  E8 00000000 E   *	    call   Str_ucase
					INVOKE Str_compare, ADDR user_string, ADDR yes
 000005A0  68 000020FD R   *	    push   OFFSET yes
 000005A5  68 0000212F R   *	    push   OFFSET user_string
 000005AA  E8 00000000 E   *	    call   Str_compare
 000005AF  74 13			je bottom
					INVOKE Str_compare, ADDR user_string, ADDR no
 000005B1  68 00002101 R   *	    push   OFFSET no
 000005B6  68 0000212F R   *	    push   OFFSET user_string
 000005BB  E8 00000000 E   *	    call   Str_compare
 000005C0  74 02			je bottom
 000005C2  EB B9			jmp getting_answer
 000005C4				bottom:
 000005C4  C3				ret
 000005C5			get_user_answer ENDP

				; This procedure determines if a string is an integer
				; Receives: none
				; Returns: 1 for yes, 0 for no
				; Pre-Conditions: none
				; Registers changed: eax, edi, ecx
 000005C5			is_num PROC
 000005C5  BF 0000212F R		mov edi, OFFSET user_string
					INVOKE Str_length, ADDR user_string
 000005CA  68 0000212F R   *	    push   OFFSET user_string
 000005CF  E8 00000000 E   *	    call   Str_length
 000005D4  8B C8			mov ecx, eax

 000005D6  B8 00000000			mov eax, 0

 000005DB				looping:
 000005DB  8A 07			mov al, [edi]
 000005DD  3C 00			cmp al, 0
 000005DF  74 17			je end_is_num
 000005E1  3C 30			cmp al, '0'
 000005E3  72 0E			jb not_num
 000005E5  3C 39			cmp al, '9'
 000005E7  77 0A			ja not_num
 000005E9  B8 00000001			mov eax, 1

 000005EE  47				inc edi
 000005EF  E2 EA			loop looping
 000005F1  EB 05			jmp end_is_num

 000005F3				not_num:
 000005F3  B8 00000000			mov eax, 0

 000005F8				end_is_num:

 000005F8  C3				ret
 000005F9			is_num ENDP

				; This procedure converts a string into its integer equivalence
				; Receives: none
				; Returns: user_int adjusted
				; Pre-Conditions: user_string is an integer string
				; Registers changed: eax, edi, ecx, ebx
 000005F9			string_to_int PROC
 000005F9  55				push ebp
 000005FA  8B EC			mov ebp, esp
 000005FC  BF 0000212F R		mov edi, OFFSET user_string
					INVOKE Str_length, ADDR user_string
 00000601  68 0000212F R   *	    push   OFFSET user_string
 00000606  E8 00000000 E   *	    call   Str_length
 0000060B  8B C8			mov ecx, eax

 0000060D				looping:
 0000060D  8B 5D 08			mov ebx, [ebp+8]
 00000610  8B 03			mov eax, [ebx]
 00000612  BB 0000000A			mov ebx, 10
 00000617  F7 E3			mul ebx
 00000619  8B 5D 08			mov ebx, [ebp+8]
 0000061C  89 03			mov [ebx], eax
 0000061E  8A 07			mov al, [edi]
 00000620  2C 30			sub al, 48
 00000622  8B 5D 08			mov ebx, [ebp+8]
 00000625  00 03			add [ebx], al
 00000627  47				inc edi
 00000628  E2 E3			loop looping

 0000062A  5D				pop ebp
 0000062B  C2 0004			ret 4
 0000062E			string_to_int ENDP

				END main
Microsoft (R) Macro Assembler Version 14.16.27026.1	    03/27/19 16:01:47
Cups Game    (cupsGame.asm				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000213C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000062E Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
determine_outcome  . . . . . . .	P Near	 00000559 _TEXT	Length= 00000024 Public STDCALL
  winner . . . . . . . . . . . .	L Near	 00000572 _TEXT	
  bottom . . . . . . . . . . . .	L Near	 0000057C _TEXT	
game_setup . . . . . . . . . . .	P Near	 00000050 _TEXT	Length= 00000056 Public STDCALL
  cup_one  . . . . . . . . . . .	L Near	 00000094 _TEXT	
  cup_two  . . . . . . . . . . .	L Near	 0000009B _TEXT	
  end_setup  . . . . . . . . . .	L Near	 000000A0 _TEXT	
get_user_answer  . . . . . . . .	P Near	 0000057D _TEXT	Length= 00000048 Public STDCALL
  getting_answer . . . . . . . .	L Near	 0000057D _TEXT	
  bottom . . . . . . . . . . . .	L Near	 000005C4 _TEXT	
get_user_guess . . . . . . . . .	P Near	 00000410 _TEXT	Length= 00000038 Public STDCALL
  getting_guess  . . . . . . . .	L Near	 0000041A _TEXT	
introduction . . . . . . . . . .	P Near	 00000040 _TEXT	Length= 00000010 Public STDCALL
is_num . . . . . . . . . . . . .	P Near	 000005C5 _TEXT	Length= 00000034 Public STDCALL
  looping  . . . . . . . . . . .	L Near	 000005DB _TEXT	
  not_num  . . . . . . . . . . .	L Near	 000005F3 _TEXT	
  end_is_num . . . . . . . . . .	L Near	 000005F8 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000040 Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 0000000A _TEXT	
one_swap . . . . . . . . . . . .	P Near	 000001BB _TEXT	Length= 00000038 Public STDCALL
  new_num  . . . . . . . . . . .	L Near	 000001BB _TEXT	
  if_one . . . . . . . . . . . .	L Near	 000001E6 _TEXT	
  if_two . . . . . . . . . . . .	L Near	 000001ED _TEXT	
  end_swap . . . . . . . . . . .	L Near	 000001F2 _TEXT	
place_ball_one . . . . . . . . .	P Near	 000000A6 _TEXT	Length= 00000056 Public STDCALL
place_ball_three . . . . . . . .	P Near	 00000152 _TEXT	Length= 00000056 Public STDCALL
place_ball_two . . . . . . . . .	P Near	 000000FC _TEXT	Length= 00000056 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
reveal_ball_one  . . . . . . . .	P Near	 00000475 _TEXT	Length= 0000004C Public STDCALL
reveal_ball_three  . . . . . . .	P Near	 0000050D _TEXT	Length= 0000004C Public STDCALL
reveal_ball_two  . . . . . . . .	P Near	 000004C1 _TEXT	Length= 0000004C Public STDCALL
reveal_ball  . . . . . . . . . .	P Near	 00000448 _TEXT	Length= 0000002D Public STDCALL
  cup_one  . . . . . . . . . . .	L Near	 00000468 _TEXT	
  cup_two  . . . . . . . . . . .	L Near	 0000046F _TEXT	
  bottom . . . . . . . . . . . .	L Near	 00000474 _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
set_num_swaps  . . . . . . . . .	P Near	 000001A8 _TEXT	Length= 00000013 Public STDCALL
string_to_int  . . . . . . . . .	P Near	 000005F9 _TEXT	Length= 00000035 Public STDCALL
  looping  . . . . . . . . . . .	L Near	 0000060D _TEXT	
swap12_adjusting . . . . . . . .	P Near	 00000294 _TEXT	Length= 0000002A Public STDCALL
  make_two . . . . . . . . . . .	L Near	 000002A5 _TEXT	
  make_one . . . . . . . . . . .	L Near	 000002B1 _TEXT	
  end_adjusting  . . . . . . . .	L Near	 000002BD _TEXT	
swap12_animation . . . . . . . .	P Near	 0000022A _TEXT	Length= 0000006A Public STDCALL
swap12 . . . . . . . . . . . . .	P Near	 0000021F _TEXT	Length= 0000000B Public STDCALL
swap23_adjusting . . . . . . . .	P Near	 00000333 _TEXT	Length= 0000002A Public STDCALL
  make_three . . . . . . . . . .	L Near	 00000344 _TEXT	
  make_two . . . . . . . . . . .	L Near	 00000350 _TEXT	
  end_adjusting  . . . . . . . .	L Near	 0000035C _TEXT	
swap23_animation . . . . . . . .	P Near	 000002C9 _TEXT	Length= 0000006A Public STDCALL
swap23 . . . . . . . . . . . . .	P Near	 000002BE _TEXT	Length= 0000000B Public STDCALL
swap31_adjusting . . . . . . . .	P Near	 000003E6 _TEXT	Length= 0000002A Public STDCALL
  make_one . . . . . . . . . . .	L Near	 000003F7 _TEXT	
  make_three . . . . . . . . . .	L Near	 00000403 _TEXT	
  end_adjusting  . . . . . . . .	L Near	 0000040F _TEXT	
swap31_animation . . . . . . . .	P Near	 00000368 _TEXT	Length= 0000007E Public STDCALL
swap31 . . . . . . . . . . . . .	P Near	 0000035D _TEXT	Length= 0000000B Public STDCALL
swapping . . . . . . . . . . . .	P Near	 000001F3 _TEXT	Length= 0000002C Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 00000217 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFFER_SIZE  . . . . . . . . . .	Number	 00000005h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ball_one1  . . . . . . . . . . .	Byte	 00000696 _DATA	
ball_one2  . . . . . . . . . . .	Byte	 000007FF _DATA	
ball_one3  . . . . . . . . . . .	Byte	 0000093B _DATA	
ball_position  . . . . . . . . .	DWord	 00002123 _DATA	
ball_three1  . . . . . . . . . .	Byte	 00000DFE _DATA	
ball_three2  . . . . . . . . . .	Byte	 00000F67 _DATA	
ball_three3  . . . . . . . . . .	Byte	 000010A3 _DATA	
ball_two1  . . . . . . . . . . .	Byte	 00000A4A _DATA	
ball_two2  . . . . . . . . . . .	Byte	 00000BB3 _DATA	
ball_two3  . . . . . . . . . . .	Byte	 00000CEF _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
congratulations  . . . . . . . .	Byte	 0000209D _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
last_swap  . . . . . . . . . . .	DWord	 0000212B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
no . . . . . . . . . . . . . . .	Byte	 00002101 _DATA	
num_swaps  . . . . . . . . . . .	DWord	 00002127 _DATA	
one_and_three1 . . . . . . . . .	Byte	 000011B2 _DATA	
one_and_three2 . . . . . . . . .	Byte	 00001336 _DATA	
one_and_three3 . . . . . . . . .	Byte	 00001469 _DATA	
one_and_three4 . . . . . . . . .	Byte	 000015A5 _DATA	
one_and_two1 . . . . . . . . . .	Byte	 00001729 _DATA	
one_and_two2 . . . . . . . . . .	Byte	 000018BF _DATA	
one_and_two3 . . . . . . . . . .	Byte	 00001A55 _DATA	
play_again . . . . . . . . . . .	Byte	 00002104 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00002083 _DATA	
prompt . . . . . . . . . . . . .	Byte	 0000204A _DATA	
ready  . . . . . . . . . . . . .	Byte	 000005A3 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rest_position  . . . . . . . . .	Byte	 000005B4 _DATA	
setting_up . . . . . . . . . . .	Byte	 000003EC _DATA	
sorry  . . . . . . . . . . . . .	Byte	 000020DA _DATA	
swapping_time  . . . . . . . . .	Byte	 000001F9 _DATA	
two_and_three1 . . . . . . . . .	Byte	 00001BEB _DATA	
two_and_three2 . . . . . . . . .	Byte	 00001D6F _DATA	
two_and_three3 . . . . . . . . .	Byte	 00001EC6 _DATA	
user_int . . . . . . . . . . . .	DWord	 00002138 _DATA	
user_str_lngth . . . . . . . . .	DWord	 00002134 _DATA	
user_string  . . . . . . . . . .	Byte	 0000212F _DATA	
welcome  . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   
yes  . . . . . . . . . . . . . .	Byte	 000020FD _DATA	

	   0 Warnings
	   0 Errors
